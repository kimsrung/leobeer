#sth{style: "background-color: #a4a2a5; background-size: 100%; margin: 0 0 100 0 !important; padding: 0 0 0 0 !important;  overflow: visible;"}
  #main_content.container
    .row{style: " color: white; font-size: 18px; font-family: 'Koulen'; margin-bottom:30px;"}
      .col-md-12.text-center.text-uppercase
        = image_tag asset_path("text_changeprofile.png")

    .row
      .col-md-12{ style: "margin: 16px 0;"}
        = image_tag asset_path("defaultPicture.jpg"), size: '442x447', id: 'sample'

    = form_for @stamp do |f|
      .row#default_image
        .col-md-12.text-center
          %span#browse_picture{style: "border: 1px solid #eee; padding: 6px 25px;border-radius: 5px; display: inline-block"}
            = image_tag asset_path("blankpicture.png"), style: "display: inline-block;"
            = f.label :image, "Change Picture", style: "margin-left: 10px; color: white;"
          %p{id: "progress", style: "color: white; font-size:10px; font-family: 'Kantumruy-Regular'; margin-top: 5px;"}

        = f.file_field :image, id: "file", style: "display:none"

      .row#stamp_image.hidden
        .col-md-3
        .col-md-6.text-center
          %a{id:"dl", download: "support_cambodia.png", href: "", style: "text-decoration: none;"}
            = image_tag asset_path("downBtn.png")

    %br
    .row
      .col-md-3
      .col-md-6.text-center
        %a{href: "/auth/facebook", style: "text-decoration: none;"}
          = image_tag asset_path("loginFB_btn.png")
    %br
    .row
      .col-md-12{ style: "margin: 16px 0;"}
        = image_tag asset_path("groupphoto.jpg")
    %br
    #video
    .row
      .col-md-2
      .col-md-8
        /%iframe{width: "100%", height: "600", src: "https://www.youtube.com/embed/p-pww2lDFGQ?autoplay=1"}
        #player
      .col-md-1

    = render 'layouts/footer'

:javascript
  // 2. This code loads the IFrame Player API code asynchronously.
  var tag = document.createElement('script');

  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // 3. This function creates an <iframe> (and YouTube player)
  //    after the API code downloads.
  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      width: '100%',
      videoId: 'K-ld9k_jVmg',
      playerVars: { 'autoplay': 1, 'controls': 0, 'rel': 0 },
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }

  // 4. The API will call this function when the video player is ready.
  function onPlayerReady(event) {
    event.target.playVideo();
  }

  // 5. The API calls this function when the player's state changes.
  //    The function indicates that when playing a video (state=1),
  //    the player should play for six seconds and then stop.
  var done = false;
  function onPlayerStateChange(event) {
    if (event.data == YT.PlayerState.PLAYING && !done) {
      //setTimeout(stopVideo, 6000);
      done = true;
    }
  }
  function stopVideo() {
    player.stopVideo();
  }
  $(document).ready(function(){
        var image_uploaded_path = '';

        $("#file").hide();

        $("#browse_picture").click(function(){
          $("#file").click();
        });

        var image_url = '#{@image_url}';
        if( image_url){
          $("#sample").attr("src", image_url);
          image_uploaded_path = '#{@image_path}';
          console.log($('#file'));
        }


        var orientation = 1;

        $('#file').change(function(e) {

            console.log($('#file'));
            var file = e.target.files[0],
                imageType = /image.*/;

            if (!file.type.match(imageType))
                return;

            var formData = new FormData($('#new_stamp')[0]);
            $.ajax({
                url: '/stamps/upload',  //Server script to process data
                type: 'POST',
                dataType: "json",
                xhr: function() {  // Custom XMLHttpRequest
                    var myXhr = $.ajaxSettings.xhr();
                    if(myXhr.upload){ // Check if upload property exists
                        myXhr.upload.addEventListener('progress',progressHandlingFunction, false); // For handling the progress of the upload
                    }
                    return myXhr;
                },

                // Form data
                data: formData,
                //Options to tell jQuery not to process data or worry about content-type.
                cache: false,
                contentType: false,
                processData: false,
                success : handleData
            });

        });

        function handleData(data) {
          setTimeout(function(){
            console.log("image uploaded");
            image_uploaded_path = data.image_uploaded_path
            console.log(image_uploaded_path);
            var src = "#{request.protocol}#{request.host}"+ image_uploaded_path;
            $('#sample').attr("src", src );
            $('#sample').show();
            $('#progress').text('រួចរាល់!');
            $("#default_image").addClass('hidden');
            $("#stamp_image").removeClass('hidden');
          }, 3000)
        }

        function progressHandlingFunction(e){
            if(e.lengthComputable){
                $('#progress').text('កំពុងដំនើរការ... ' + Math.ceil(e.loaded*100/e.total)+ '%');
            }
        }


        function fileOnload(e) {
            var $img = $('<img>', { src: e.target.result});
            var canvas = document.getElementById('canvas');
            var ctx = canvas.getContext('2d');

            ctx.save();

            $img.load(function() {

                switch(orientation){
                  case 2:
                      // horizontal flip
                      ctx.translate(canvas.width, 0);
                      ctx.scale(-1, 1);
                      break;
                  case 3:
                      // 180° rotate left
                      ctx.translate(canvas.width, canvas.height);
                      ctx.rotate(Math.PI);
                      break;
                  case 4:
                      // vertical flip
                      ctx.translate(0, canvas.height);
                      ctx.scale(1, -1);
                      break;
                  case 5:
                      // vertical flip + 90 rotate right
                      ctx.rotate(0.5 * Math.PI);
                      ctx.scale(1, -1);
                      break;
                  case 6:
                      // 90° rotate right
                      console.log("enter here 6");

                      ctx.rotate(0.5 * Math.PI);
                      ctx.translate(0, -canvas.height);
                      break;
                  case 7:
                      // horizontal flip + 90 rotate right
                      ctx.rotate(0.5 * Math.PI);
                      ctx.translate(canvas.width, -canvas.height);
                      ctx.scale(-1, 1);
                      break;
                  case 8:
                      // 90° rotate left
                      ctx.rotate(-0.5 * Math.PI);
                      ctx.translate(-canvas.width, 0);
                      break;
              }

              ctx.drawImage(this, 0, 0, 400, 400);
              ctx.restore();
              orientation = 1

              $filter = $('<img>', { src: "#{asset_path('BlueFilterAndLogo.png')}"});
              $filter.load(function() {
                  ctx.drawImage(this, 0, 0, 400, 400);
              });

            });


        }


        function dlCanvas() {
          if (image_uploaded_path && image_uploaded_path.length > 0){
            dt = "#{request.protocol}#{request.host}" + "#{download_stamps_path}"+ '?filepath=' + image_uploaded_path;
            console.log(dt);
            $("#dl").attr('href', dt);
          }
        };
        document.getElementById("dl").addEventListener('click', dlCanvas, false);
  });


